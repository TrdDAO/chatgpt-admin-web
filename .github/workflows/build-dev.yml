# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Develop - Node CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_REPO: ghcr.io/trddao/chatgpt-admin-dev
  IMAGE_NAME: chatgpt-admin-dev
  CHART_NAME: chatgpt-admin-dev
  CHART_VERSION: 1.0.0

permissions: write-all

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - id: commit
        uses: pr-mpt/actions-commit-hash@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build node
        run: |
          npm install -g pnpm
          pnpm install --no-frozen-lockfile
          pnpm run build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_REPO }}:latest
            ${{ env.IMAGE_REPO }}:${{ steps.commit.outputs.short }}

      # - name: Clean Old Images
      #   uses: actions/delete-package-versions@v4
      #   with:
      #     package-type: 'container'
      #     package-name: ${{ env.IMAGE_NAME }}
      #     min-versions-to-keep: 10
      #     ignore-versions: 'latest'
      #     delete-only-pre-release-versions: "true"

      - name: Setup Helm
        uses: azure/setup-helm@v3

      - name: Build and Push Helm Chart
        run: |
          sed -i "s/__REPLACE_CHART_NAME__/${CHART_NAME}/g" ./charts/Chart.yaml
          sed -i "s,__REPLACE_IMAGE_NAME__,${IMAGE_REPO},g" ./charts/values.yaml
          helm plugin install https://github.com/chartmuseum/helm-push
          helm repo add trddao https://charts.miraclekang.com/ --username ${{ secrets.HELM_USERNAME }} --password ${{ secrets.HELM_PASSWORD }}
          helm repo update trddao
          VERSION=$(helm search repo trddao/${CHART_NAME} --devel | sed -n 2p | awk '{print $2}')
          VERSION=$(if [ -z "$VERSION" ]; then echo "$CHART_VERSION"; else echo $VERSION; fi)
          VERSION=$(echo -e "$VERSION\n$CHART_VERSION" | sort -V | tail -n 1)
          CHART_VERSION=$(echo $VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          helm cm-push ./charts trddao --version ${CHART_VERSION} --app-version ${{ steps.commit.outputs.short }}
